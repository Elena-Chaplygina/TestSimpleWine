plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '6.0.0-m2'

}
allure {
    report {
        version.set("2.20.1")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.20.1")
            }
        }
    }
}


repositories {
    mavenCentral()
}
def allureVersion ="2.20.1",
    slf4jVersion="2.0.7"

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.3.0",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.codeborne:selenide:6.10.3",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            'com.github.javafaker:javafaker:1.0.2',
            'io.qameta.allure:allure-selenide:2.20.1',
            'org.seleniumhq.selenium:selenium-java:3.141.59',
            'io.github.bonigarcia:webdrivermanager:5.3.2',
            'org.aeonbits.owner:owner:1.0.4',
            "commons-io:commons-io:2.11.0",
            "org.aspectj:aspectjrt:1.9.8",
            "org.aspectj:aspectjweaver:1.9.8",
            "io.appium:java-client:8.3.0"
    )


}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


test {
    useJUnitPlatform()
    systemProperties(System.getProperties())

}
task ui_test(type: Test) {
    useJUnitPlatform {
        includeTags("ui")
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}
task mobile_emulation_test(type: Test) {
    useJUnitPlatform {
        includeTags("mobile_emulation")
    }
}
task browserstack_test(type: Test) {
    useJUnitPlatform {
        includeTags("browserstack")
    }
}
task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}